name: "CodeChecks"

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        submodules: recursive
        fetch-depth: 1

    - name: Initialize CodeQL
      uses: github/codeql-action/init@181d5eefc20863364f96762470ba6f862bdef56b # v3.29.2
      with:
        languages: ${{ matrix.language }}
        source-root: ./Src

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gfortran libopenblas-dev clang build-essential

    # Cache OpenBLAS
    - name: Cache OpenBLAS Build
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      id: cache-openblas-linux
      with:
        path: Lib/OpenBLAS_build
        key: openblas-linux-${{ runner.os }}-${{ hashFiles('OpenBLAS/**,Lib/OpenBLAS_build/**') }}
        restore-keys: |
          openblas-linux-${{ runner.os }}-

    - name: Build OpenBLAS
      if: steps.cache-openblas-linux.outputs.cache-hit != 'true'
      run: |
          cd OpenBLAS 
          mkdir -p installation 
          make -j 
          make PREFIX=installation install
    

    - name: make_OpenMP
      run: |
        cd llvm-project/openmp 
        mkdir -p build 
        cd build 
        cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++ -DLIBOMP_ENABLE_SHARED=OFF .. 
        make -j
        cd runtime/src
        cmake -DCMAKE_INSTALL_PREFIX=../../../../../Lib/OpenMP_build/ -P cmake_install.cmake

    # Cache featomic
    - name: Cache featomic Build
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      id: cache-featomic-linux
      with:
        path: Lib/featomic_install  # Adjust if featomic installs elsewhere
        key: featomic-linux-${{ runner.os }}-${{ hashFiles('featomic/**,Lib/featomic_install/**') }}
        restore-keys: |
          featomic-linux-${{ runner.os }}-
  
    - name: Build featomic
      if: steps.cache-featomic-linux.outputs.cache-hit != 'true'
      run: |
          cd featomic/featomic 
          mkdir -p build
          cd build 
          cmake -DCMAKE_BUILD_TYPE=Release -DFEATOMIC_FETCH_METATENSOR=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=../../featomic_install .. 
          make install

    - name: make_Linux
      run: make

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@181d5eefc20863364f96762470ba6f862bdef56b # v3.29.2
      with:
        output: 'codeql-results.sarif'  # Specify output file for CodeQL results

    - name: Upload analysis results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@181d5eefc20863364f96762470ba6f862bdef56b # v3.29.2
      with:
        sarif_file: ${{github.workspace}}/codeql-results.sarif
        category: codeql


  flawfinder:
    name: flawfinder
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
            submodules: false
            fetch-depth: 1

      - name: flawfinder_scan
        uses: david-a-wheeler/flawfinder@c57197cd6061453f10a496f30a732bc1905918d1 # 2.0.19
        with:
          arguments: '--sarif Src'
          output: 'flawfinder_results.sarif'
          
      - name: Upload analysis results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@181d5eefc20863364f96762470ba6f862bdef56b # v3.29.2
        with:
          sarif_file: ${{github.workspace}}/flawfinder_results.sarif
          category: flawfinder
